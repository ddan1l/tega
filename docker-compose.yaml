networks:
  my_net:
    # Specify driver options
    driver: bridge

services:
  nginx:
    image: nginx:latest
    container_name: nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./tega-backend/nginx/nginx.conf:/etc/nginx/nginx.conf
      - ./tega-backend/nginx/logs:/var/log/nginx
      - ./tega-backend/nginx/conf.d:/etc/nginx/conf.d
      - ./tega-backend/nginx/certs:/etc/nginx/certs
    networks:
      - my_net
    restart: unless-stopped
  db:
    container_name: db
    image: postgres
    restart: unless-stopped
    environment:
      POSTGRES_USER: ${DB_USER:-tega}
      POSTGRES_PASSWORD: ${DB_USER:-DB_PASSWORD}
      POSTGRES_DB: ${DB_NAME:-tega}
    networks:
      - my_net
    ports:
      - "${DB_PORT:-5432}:${DB_PORT:-5432}"
    volumes:
      - /var/lib/postgres-data:/var/lib/postgresql/data
  pgadmin:
    container_name: pgadmin
    image: dpage/pgadmin4:7
    depends_on:
      - db
    environment:
      PGADMIN_DEFAULT_EMAIL: ${PGADMIN_DEFAULT_EMAIL:-admin@admin.admin}
      PGADMIN_DEFAULT_PASSWORD: ${PGADMIN_DEFAULT_PASSWORD:-admin}
      PGADMIN_CONFIG_SERVER_MODE: 'False'
    volumes:
      - ./pgadmin_data:/var/lib/pgadmin
    networks:
      - my_net
    ports:
      - "${PGADMIN_PORT:-5050}:${PGADMIN_PORT:-5050}"
    user: "${PGADMIN_PORT:-5050}:${PGADMIN_PORT:-5050}"
    restart: unless-stopped
  backend:
    container_name: backend
    build: ./tega-backend
    networks:
      - my_net
    depends_on:
      - db
    volumes:
      - ./tega-backend:/app
    env_file:
      - ./.env 
    ports:
      - "${BACKEND_PORT:-8080}:${BACKEND_PORT:-8080}"
  frontend:
    container_name: frontend
    build: ./tega-frontend
    restart: always
    environment:
      - NODE_ENV=development
      - PORT=${FRONTEND_PORT:-3000}
    volumes:
      - ./tega-frontend:/app
      - /app/node_modules
    env_file:
      - ./tega-frontend/.env 
    ports:
      - "${FRONTEND_PORT:-3000}:${FRONTEND_PORT:-3000}"
    networks:
      - my_net